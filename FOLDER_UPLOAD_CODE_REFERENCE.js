// üîß ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå - Code Reference

## A. JavaScript Frontend: ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡∏ú‡πà‡∏≤‡∏ô event.target.files

// ‚úÖ Code ‡πÉ‡∏ô /home/user/webapp/frontend/public/static/app.js line 124-149:

handleFolderChange(event) {
  // 1. ‡πÅ‡∏õ‡∏•‡∏á FileList ‡πÄ‡∏õ‡πá‡∏ô Array
  const files = Array.from(event.target.files);
  
  console.log('üìÅ Folder files detected:', files.length);
  
  // 2. ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
  const supportedFiles = files.filter(file => {
    const ext = file.name.toLowerCase().split('.').pop();
    const isSupported = ['txt', 'docx', 'pdf'].includes(ext);
    
    // 3. ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å webkitRelativePath ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å!
    console.log(`üìÑ File: ${file.name}, Path: ${file.webkitRelativePath}, Supported: ${isSupported}`);
    
    return isSupported;
  });
  
  console.log('‚úÖ Supported files:', supportedFiles.length);
  
  if (supportedFiles.length === 0) {
    this.showAlert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå (.txt, .docx, .pdf)', 'warning');
    return;
  }
  
  // 4. ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏° webkitRelativePath
  this.folderFiles = supportedFiles;
  
  // 5. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå
  this.displaySelectedFiles(supportedFiles, 'folder');
}

## B. ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô FormData

// ‚úÖ Code ‡πÉ‡∏ô handleFormSubmit() line 366-392:

async handleFormSubmit(event) {
  event.preventDefault();
  
  const formData = new FormData();
  
  // 1. ‚úÖ ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏à‡∏≤‡∏Å folder selection
  let filesToUpload = [];
  
  if (this.currentFiles && this.currentFiles.length > 0) {
    // ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
    filesToUpload = this.currentFiles;
    console.log('üìÅ Using stored folder files:', filesToUpload.length);
  } else {
    // ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏Å‡∏ï‡∏¥
    const inputFiles = document.getElementById('inputFiles').files;
    filesToUpload = Array.from(inputFiles);
    console.log('üìÑ Using regular files:', filesToUpload.length);
  }
  
  // 2. ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡∏•‡∏á‡πÉ‡∏ô FormData ‡∏û‡∏£‡πâ‡∏≠‡∏° metadata
  for (let i = 0; i < filesToUpload.length; i++) {
    const file = filesToUpload[i];
    formData.append('input_files', file);
    
    // 3. ‚úÖ Log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• webkitRelativePath ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug
    console.log(`üìé Adding file ${i + 1}:`, {
      name: file.name,
      size: file.size,
      type: file.type,
      webkitRelativePath: file.webkitRelativePath || 'N/A'
    });
  }
}

## C. HTML Input Configuration

// ‚úÖ HTML input ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå:
<input type="file" 
       id="inputFolder" 
       name="input_folder" 
       webkitdirectory="true"    // ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ
       accept=".txt,.docx,.pdf"  // ‚úÖ ‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
       class="hidden" />

## D. Key Points ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Folder Upload

// ‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≥:

1. **webkitdirectory="true"**: ‡∏ó‡∏≥‡πÉ‡∏´‡πâ input ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏ó‡∏ô‡πÑ‡∏ü‡∏•‡πå
2. **file.webkitRelativePath**: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå (‡πÄ‡∏ä‡πà‡∏ô "stories/fantasy.txt")
3. **Array.from(event.target.files)**: ‡πÅ‡∏õ‡∏•‡∏á FileList ‡πÄ‡∏õ‡πá‡∏ô Array
4. **FormData.append('input_files', file)**: ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏° metadata
5. **this.folderFiles**: ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠ submit form

## E. ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Folder Upload

// Test Script:
const testFolderUpload = () => {
  // 1. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå .txt, .docx, .pdf
  // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö console.log ‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏î‡∏á webkitRelativePath
  // 3. ‡∏Å‡∏î "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå"
  // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Network tab ‡∏ß‡πà‡∏≤ FormData ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏° path
  
  console.log('üìÅ Folder upload test completed');
};